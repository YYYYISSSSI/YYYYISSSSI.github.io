#include<iostream>  
using namespace std;  
class point  
{  
private:  
    int x,y;//数据成员  
public:  
    point(int xx=0,int yy=0)//构造函数  
    {  
        x=xx;  
        y=yy;  
        cout<<"构造函数被调用"<<endl;  
    }  
    point(point &p);//拷贝构造函数，参数是对象的引用  
    ~point(){cout<<"析构函数被调用"<<endl;}  
    int get_x(){return x;}//方法  
    int get_y(){return y;}  
};  
  
point::point(point &p)  
{  
    x=p.x;//将对象p的变相赋值给当前成员变量。  
    y=p.y;  
    cout<<"拷贝构造函数被调用"<<endl;  
}  
  
void f(point p)  
{  
    cout<<p.get_x()<<"  "<<p.get_y()<<endl;  
}  
  
point g()//返回类型是point  
{  
    point a(7,33);  
    return a;  
}  
  
void main()  
{  
    point a(15,22);  
    point b(a);//构造一个对象，使用拷贝构造函数。  
    cout<<b.get_x()<<"  "<<b.get_y()<<endl;  
    f(b);  
    b=g();  
    cout<<b.get_x()<<"  "<<b.get_y()<<endl;  
} 
